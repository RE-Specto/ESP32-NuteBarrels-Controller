bugs:
!! calibration page as well as pool selection from webUI should trigger save!
need to prevent bypass to pool0! (or limit until sonic? or until barr size?)

isChanged will retriger SaveStructs over and over at each start press when Expanders.Protect is set
if (request->hasArg("FullBarrel"))
    sonic full barrel calibration point will create error
        need to save last non-errorous - safeguard range 
    ErrorCheck(barrel, BARREL_SONIC_OUTOFRANGE)
fmsTask sonic 0 timeout after sonic >0 error while storing
    do sonics need time after mux switch?
    try 2 reproduce with hardware
settings not saving automaticly after change from webui - run savestructs
deviation always to high for sonic
    am i measuring sonics too fast?
check if (b->_barrel_height - b->_sonic_last_value) for integer overflow

to implement:
edit fmsd for new simple 1barrel system:
    * reuse storing barrel for pool selection?

    changes:
    1 flow sensor for all
    1 pressure sensor (disabled for now)
    1 sonic (5 'barrels')

    need f5 together with every fill
    need f6 with every drain
    store instead of drain now? 
    reuse store barrel for pool selection?
        SetFillBarrel already in webserver

    cleanwater pressure vs pump pressure on the same sensor (_min_pressure _max_pressure)

    Calib5L add timeout!! + add need calib var to trigger? same as manual mode check?
    Relay( usage search

rewrite system to use concentrate from mixer barrel
    [ ] edit drain to drain fully!!
    [ ] drain by ammount of barrels not liters??
    [ ] add Fill 5 Liters, Store 5 Liters for flow calibration!!
    [ ] add 'state bitmap to human readable string' translator function
    [ ]add proper barrel_disabled webui
    [ ]move pump to drain6? a7?
    [ ]reimplement bypass at fill(POOLS) (f7)
    [ ]bypass separately from drain
    [ ]separate calib for nutes flowsensor - using separate calib5L func?

    [ ] add DrainTotal BypassTotal to webUI + add DrainTotalSet BypassTotalSet
    [ ] ignore drain requirement - allways drain until empty

    [ ] separate total drain and total bypass into 5 pools (4 + 1spare
    [ ] if bypass is via manual, how to pause without clearing? via interface?
            edit ResetManual to save value aside instead of clearing

    [ ] check if I can use barrels 1-4 as pool1-4
    [ ] use store instead of drain? _storing_barrel for target pool?

interface:
- [ ] 4 pools:
total drain cycles
total bypass cubic meters
select pool
- [ ] mixing barrel:
ammount
state (f,m,s,d)
- [ ] bypass in liters


system mods:
- [ ] install new sonic?
- [ ] swith external mixer from F6 to A7spare @Expander0x20 + add separate relay to A7spare
- [ ] use stor1-4 as pools1-4?

check for unused functions and methods

add SaveStructs button to calibration
manual setting of water+nutri for flow
reuse sonic calib methods for flow calibration?
add version string

implement proper logging: https://thingpulse.com/esp32-logging/
    or manually add log levels to serial prints + shorten output format
        +add setting log level to webUI?
        time[000012]line[1732]func[SonicMeasure] message
        [W][T000012][SonicMeasure:1732] message
        split define LOG into LOGERROR LOGWARN .....

upgrade spiffs to littlefs

separate code into header files and modules

any way to check for Expander connectivity?
    +hardware check for mux - loopback on leg 14?
        test by serial.write + serial.read ?

check: State.SetStoreBarrel(State.FillBarrel()); for bugs

change error64 from high sonic measurement error, to high deviation from flow sensor

add barrel enable disable
add FreshGet NutriGet to webUI at each barrel
add flowsetmin flowsetmax at each barrel at webUI 

check & print error states the same way as system states?

barr error set shoud save to sd? or save after each use in code?
    implement error unset from webui

serial print to telnet or to webui directly or via another board (esp8266?).
    try WebSerial https://techtutorialsx.com/2021/01/09/esp32-arduino-webserial/

-solder dummy pressure sensor

work on system hardware - implement all changes to schematic!!

check what modem returns if error - if valid check - implement SMS error

add barrel disable enable WebUI
    skip barrel only if disabled, or if solenoid error - skip BARREL_SONIC_*

manual mux unlock via webUI

manual apply sonic value to flow barrel volume on request.

limit all data from webUI to valid range - ie. no "measure barrel 27"

what needed for barrel sonic calibration?
    dry barrel height - SonicOffsetSet
        measure at start
            SonicOffsetSet(barrX,SonicLastMM(barrX));
    how many mililiters is in one milimeter - SonicMLinMM
        fill with exact 100L
            Save100LitersMark
    full  barrel litrage - VolumeMaxSet
        fill untill sonic error
        drain safeguard value
            VolumeMaxSet(barrX, SonicCalcLiters(barrX))
    empty barrel litrage - VolumeMinSet
        drain barrel fully
            VolumeMinSet(barrX, SonicCalcLiters(barrX))
    

WebUI from "1-pump idea test (1).png" file with overlays and jQuery
    https://forum.jquery.com/topic/how-to-change-text-dynamically-svg
telnet server to send LOG.prints + telnet client inside webui?
allow to manually disable a barrel
    barrels.ErrorSet(barrel, BARREL_DISABLED)

uint16_t DTS = 0;                                              //mySettings.DTS?3600UL:0;
uint16_t timeZone = 3;    

implement mux lock timeout.
    LockMUX should start an external timer and UnlockMUX should stop it

variables that survives reboot?? :)
try RTC_NOINIT_ATTR?
https://github.com/highno/rtcvars/issues/3

recheck concentration float is accurate
"Do not use float to represent whole numbers."
http://www.cplusplus.com/forum/general/67783/


add to schematic:
12v line add polyfuze
optional: doser on expander x20 pin A7? serial scale mux#14?

how flow freshwater becames nutes?
    ConcentrationRecalc
        NutrientsTransferCalc
            Store
            StoreManual
    should i recalc at barrel 0 at start of mixing,
     so we have flow ammount in nutes and not in freshwater even before storing

can we work with bad flow sensor?
    fill works by flow, protects from overfill by sonic
    mix works by timer
    store works by sonic
    drain works by flow, protects from overdrain by sonic 









optional:
check all uint values never go below zero!!
    expected in sensor measurements
    anywhere else?

change sonic 10555  to retry--
    BARREL_SONIC_OUTOFRANGE only if all 10555
drain_log file
    needs accurate clock

make pressure sensor check constantly so i can turn off the pump on overpressure
    task loop inside other cpu core? or inside filling loop itself?
    ps2 only when pump working?
    ps1 only once before sol open + once if no flow + once at system start?

set Overpressure global error only if error occurs with multiple solenoids

add concentrationSet to barrels for manual?
use filter instead of avearge for sonic?
https://stackoverflow.com/questions/10338888/fast-median-filter-in-c-c-for-uint16-2d-array
restore to sd if spiffs date newer? fix timestamp
barrel busy flag?
add option to continue on pressure sensor1 error if flow1 ok
continue on ps2 error if flow2 is in range: 0 < flow2 < "flow2 with no load"
continue on flow error if sonic is rising
continue on sonic error if flow counted barrel volume is ok
continue to next barrel if barrel solenoids error
only unrecoverable errors: pump, main barrel solenoids

handle reset in the middle of flow sensor transfer
    calculate by last values?
    lock thread mux so it executes quick? https://esp32.com/viewtopic.php?t=1703

server.on("/mdns" check mdns broadcast
switchFS add fs check, try to restart filesystem on failure
add ... on serial.available to check module awake
"[E][vfs_api.cpp:22] open(): File system is not mounted" nice error reporting format 

pressure - in next version:
    if overpressure error - set target barrel error
    goto next barrel, clear overpressure error
    if all barrels error - set pump error - clear all barrel overpressure errors
      except manually-disabled barrels "error"
    if no pressure - loop-measure for a while
    if still no pressure - check flow
    no flow - set pump error.

deprecate sonic timeout - use retry count * constant time 